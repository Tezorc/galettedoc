# Johan Cwiklinski <johan@x-tnd.be>, 2019. #zanata
msgid ""
msgstr ""
"Project-Id-Version: Galette 0.9.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-10-20 21:12+0200\n"
"PO-Revision-Date: 2019-10-20 10:03+0000\n"
"Last-Translator: Copied by Zanata <copied-by-zanata@zanata.org>\n"
"Language-Team: French\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1)\n"
"X-Generator: Zanata 4.6.2\n"

#: ../development/plugins.rst:7
msgid "Writting plugins"
msgstr "Ã‰criture de plugins"

#: ../development/plugins.rst:11
msgid ""
"From plugins, you can benefit from the entire Galette API, extends or "
"complete it with classes, you can create specific pages, menu entries, and "
"action buttons on members."
msgstr ""

#: ../development/plugins.rst:13
msgid ""
"Plugin system was inspired from `DotClear blogging solution "
"<https://fr.dotclear.org/>`_."
msgstr ""

#: ../development/plugins.rst:15
msgid ""
"A ``plugin`` directory in Galette will host plugins, one directory per "
"plugin is expected:"
msgstr ""

#: ../development/plugins.rst:17 ../development/plugins.rst:553
msgid "|folder| `plugins`"
msgstr ""

#: ../development/plugins.rst:19
msgid "|folder| `Auto`"
msgstr ""

#: ../development/plugins.rst:20
msgid "|folder| `Paypal`"
msgstr ""

#: ../development/plugins.rst:21
msgid "|folder| `...`"
msgstr ""

#: ../development/plugins.rst:23
msgid ""
"Just as in Galette, you will find a ``lang`` directory used for translation "
"files, an ``template/default`` directory for Smarty templates, a ``lib`` "
"directory for classes, ..."
msgstr ""

#: ../development/plugins.rst:25
msgid ""
"None of those directories are mandatory, plugin may have no need for them :)"
msgstr ""

#: ../development/plugins.rst:29
msgid ""
"A :doc:`migration guide for plugins from Galette 0.8 to 0.9 "
"<plugins-0.8-0.9>` is available."
msgstr ""

#: ../development/plugins.rst:33
msgid ""
"All Galette :doc:`development informations <index>` also apply to plugins. "
"You may need to :doc:`debug a bit <debug>` or :ref:`change application "
"behavior <behavior>`"
msgstr ""

#: ../development/plugins.rst:36
msgid "Licence"
msgstr ""

#: ../development/plugins.rst:38
msgid "Official Galette plugins are licensed under GPL version 3."
msgstr ""

#: ../development/plugins.rst:40
msgid "Licence must:"
msgstr ""

#: ../development/plugins.rst:42
msgid "be included in the root directory (``LICENSE`` or ``COPYING`` file),"
msgstr ""

#: ../development/plugins.rst:43
msgid ""
"be present in all source file headers - if the selected license wants it)."
msgstr ""

#: ../development/plugins.rst:48
msgid "Plugins Configuration"
msgstr ""

#: ../development/plugins.rst:50
msgid ""
"A ``_define.php`` file must be present for each plugin. It defines plugin "
"name, its author, ..."
msgstr ""

#: ../development/plugins.rst:69
msgid "If the file is missing or incorrect, plugin will not be loaded at all."
msgstr ""

#: ../development/plugins.rst:74
msgid "Plugins compatibility"
msgstr ""

#: ../development/plugins.rst:76
msgid ""
"Plugins compatibility is a quite simple system: Galette define a "
"compatibility version that does not change on every Galette release, and "
"plugins declare a Galette compatible version. Those versions are compared, "
"and plugin is marked as compatible if it declare to support current Galette "
"version."
msgstr ""

#: ../development/plugins.rst:78
msgid ""
"On Galette side, compatibility version is declared with "
"`GALETTE_COMPAT_VERSION` constant in ``galette/includes/galette.inc.php``. "
"On plugin side, compatibility version is declared in the ``_define.php`` "
"plugin file."
msgstr ""

#: ../development/plugins.rst:82
msgid "Routes"
msgstr ""

#: ../development/plugins.rst:86
msgid ""
"You will need some URLs for your plugin. Galette rely on Slim framework to "
"expose routes. Each URL fit a route, with a name, possible arguments, HTTP "
"method, ..."
msgstr ""

#: ../development/plugins.rst:88
msgid ""
"In plugins, you must add a ``_routes.php`` file. In this file, you will "
"declare all your plugin URLs. Galette provide URL similar to "
"``{galette}/plugin/myplugin`` on which your own routes wil be append."
msgstr ""

#: ../development/plugins.rst:90
msgid "A route is constitued of the following elements:"
msgstr ""

#: ../development/plugins.rst:92
msgid "an URL,"
msgstr ""

#: ../development/plugins.rst:93
msgid "maybe some URL parameters, some may be required,"
msgstr ""

#: ../development/plugins.rst:94
msgid "a name (unique),"
msgstr ""

#: ../development/plugins.rst:95
msgid "access restriction,"
msgstr ""

#: ../development/plugins.rst:96
msgid "a HTTP method (`GET` and/or `POST`)."
msgstr ""

#: ../development/plugins.rst:98
msgid "A simple route example would look like:"
msgstr ""

#: ../development/plugins.rst:110
msgid ""
"This will respond to the URL ``{galette}/plugin/myplugin/main``; and it will"
" just display `Welcome to the main page`."
msgstr ""

#: ../development/plugins.rst:114
msgid ""
"Routes names must be unique. To prevent any collision, all plugins routes "
"names must be prefixed with plugin name."
msgstr ""

#: ../development/plugins.rst:116
msgid ""
"Routes can have parameters, mandatory or not. Following example add th "
"`arg1` required parameter, and the `arg2` optionnal one:"
msgstr ""

#: ../development/plugins.rst:132
msgid ""
"It is also possible to restrict a parameter value using regular expressions."
" See `Slim routing documentation "
"<https://www.slimframework.com/docs/objects/router.html>`_ to know more."
msgstr ""

#: ../development/plugins.rst:135
msgid "Routes and templates"
msgstr ""

#: ../development/plugins.rst:137
msgid ""
"Of course, you will probably need something more than simple ``echo`` from a"
" display point of view;"
msgstr ""

#: ../development/plugins.rst:139
msgid ""
"Globally, inside Galette, `GET` routes displays informations (lists, forms, "
"...) and `POST` routes do actions. That way, forms will have a `POST` "
"action, that will do the job, and then will redirect on a `GET` page."
msgstr ""

#: ../development/plugins.rst:141
msgid "Displaying a page from a Smarty template would look like:"
msgstr ""

#: ../development/plugins.rst:155
msgid ""
"The use of the ``$module['root']`` ensures the file you are trying to load "
"is the one of your plugin. Without that, if Galette or another plugin "
"provides a `file.tpl` file, it may be loaded from your plugin, and this "
"won't work. Then, ``file.tpl`` is core file ``file.tpl``, and "
"``file:[abcde]file.tpl`` the ``file.tpl`` file from plugin which identifier "
"is ``abcde``."
msgstr ""

#: ../development/plugins.rst:160
msgid ""
"Galette is in charge to attribute identifiers to plugins. Do no try to guess"
" it, and use ``$module['root']`` which is unique per plugin. Rely on the "
"``use`` keyword to pass it to your anonymous functions:"
msgstr ""

#: ../development/plugins.rst:171
msgid "Redirections are simple to do:"
msgstr ""

#: ../development/plugins.rst:181
msgid "Access restrictions"
msgstr ""

#: ../development/plugins.rst:183
msgid ""
"Galette provides a `middleware "
"<https://www.slimframework.com/docs/concepts/middleware.html>` which "
"restricts routes access."
msgstr ""

#: ../development/plugins.rst:185
msgid "Following roles can be used:"
msgstr ""

#: ../development/plugins.rst:187
msgid "``superadmin`` (super-administrator),"
msgstr ""

#: ../development/plugins.rst:188
msgid "``admin`` (administrators),"
msgstr ""

#: ../development/plugins.rst:189
msgid "``staff`` (staff members)"
msgstr ""

#: ../development/plugins.rst:190
msgid "``groupmanager`` (groups managers)"
msgstr ""

#: ../development/plugins.rst:191
msgid "``member`` (logged in user)"
msgstr ""

#: ../development/plugins.rst:193
msgid ""
"``groupmanager`` and ``member`` roles requires additional work. A route that"
" is accessible for groups managers, but their access must certainly be "
"restricted to the groups they owns."
msgstr ""

#: ../development/plugins.rst:195
msgid ""
"To add a restriction access to a route, call the ``$authenticate`` "
"middleware on your route:"
msgstr ""

#: ../development/plugins.rst:207
msgid ""
"Along with that, you have to define the access to that route in your "
"``_define.php`` file. In the example from the begginning of the doc, "
"``myplugin_main`` route has been restricted to staff members only."
msgstr ""

#: ../development/plugins.rst:209
msgid ""
"Pages which does not need any specific restriction will just not call the "
"middleware. It is the same for pages which may be displayed for boths logged"
" in and not. In that case, you must have logic in your route and/or in your "
"classes to manage access."
msgstr ""

#: ../development/plugins.rst:212 ../development/plugins.rst:352
msgid "Public pages"
msgstr ""

#: ../development/plugins.rst:214
msgid ""
"Some of pages may be accessible without authentication, this is a Galette "
"preference. For such pages, you will have to check if public pages are "
"active for current logged in user:"
msgstr ""

#: ../development/plugins.rst:233
msgid "Usage"
msgstr ""

#: ../development/plugins.rst:235
msgid ""
"You will need to use links to your different routes, either in Smarty "
"templates or in routes themselves (redirection case for example)."
msgstr ""

#: ../development/plugins.rst:237
msgid ""
"From PHP code, you will use ``pathFor`` method. Is route is waiting for "
"parameters, send them as an indexed array:"
msgstr ""

#: ../development/plugins.rst:245
msgid "From a Smarty template, use the ``path_for`` function:"
msgstr ""

#: ../development/plugins.rst:254
msgid ""
"If a required parameter is missing, path will not be generated and this will"
" produce an error."
msgstr ""

#: ../development/plugins.rst:259
msgid "Web resources"
msgstr ""

#: ../development/plugins.rst:261
msgid ""
"In Galette, all resources that must be read from the server (images, CSS and"
" javascript files) must be in the ``webroot`` directory in your plugin. This"
" one will be kind of mapped to be served from the web."
msgstr ""

#: ../development/plugins.rst:264
msgid "Smarty"
msgstr ""

#: ../development/plugins.rst:269
msgid "Heritage"
msgstr ""

#: ../development/plugins.rst:271
msgid ""
"Before Galette 0.9, templates ws providing a page part only, and PHP code "
"was in charge to include it in the page. But now, `template files must "
"declare their heritage "
"<https://www.smarty.net/docs/en/advanced.features.template.inheritance.tpl>`_."
msgstr ""

#: ../development/plugins.rst:273
msgid "Three parent templates are provided:"
msgstr ""

#: ../development/plugins.rst:275
msgid "``page.tpl`` for most of the pages,"
msgstr ""

#: ../development/plugins.rst:276
msgid "``public_page.tpl`` for public pages,"
msgstr ""

#: ../development/plugins.rst:277
msgid "``ajax.tpl`` for AJAX called pages."
msgstr ""

#: ../development/plugins.rst:279
msgid ""
"Parents templates provide a ``content`` block to display page contents. "
"``page.tpl`` and ``public_page.tpl`` also provide a ``javascript`` to "
"include all ``<script>`` elements at the right place. None of those blocks "
"is mandatory, but an empty page would not make sense ;)"
msgstr ""

#: ../development/plugins.rst:291
msgid "Parent template can be conditionned if you use a variable:"
msgstr ""

#: ../development/plugins.rst:303
msgid "Variables assignement"
msgstr ""

#: ../development/plugins.rst:305
msgid ""
"It is possible to pass global variables to Smarty (with "
"``$tpl->assign('my_var', 'my_value');``). To achieve that, add a "
"``_smarties.php`` file to your plugin. It may currently provide only one "
"array named ``_tpl_assignments``:"
msgstr ""

#: ../development/plugins.rst:318
msgid ""
"All declared variables will be accessible from Smarty templates like all "
"other variables: ``{$my_var}``."
msgstr ""

#: ../development/plugins.rst:320
msgid ""
"Automatic replacements may occurs in declared variable, using specific "
"strings:"
msgstr ""

#: ../development/plugins.rst:322
msgid ""
"``__plugin_include_dir__`` will look for ``includes`` directory in your "
"plugin (will be ``./plugins/dir_name/includes/dossier`` for our example)"
msgstr ""

#: ../development/plugins.rst:323
msgid ""
"``__plugin_templates_dir__`` will be replaced with plugin ``templates`` "
"directory (will be ``./plugins/dir_name/templates/`` for our example)"
msgstr ""

#: ../development/plugins.rst:324
msgid ""
"``__plugin_dir__`` will be replaced with path to your plugin (will "
"``./plugins/dir_name/`` for our exemple)"
msgstr ""

#: ../development/plugins.rst:326
msgid ""
"That way, whatever the directory name used, you'll find the good one :)"
msgstr ""

#: ../development/plugins.rst:329
msgid "Menu entries"
msgstr ""

#: ../development/plugins.rst:331
msgid ""
"Menu links (and links in template more globally) will refer to a route using"
" its name. Use the ``path_for`` Smarty function as already said."
msgstr ""

#: ../development/plugins.rst:333
msgid ""
"Presence of a ``menu.tpl`` file in your template directory will add its "
"content below other Galette menu entries. It must be the same design as "
"Galette core menus:"
msgstr ""

#: ../development/plugins.rst:356
msgid ""
"Public pages menu is distinct in Galette, if you want to add public pages in"
" your menu, put compatible contents in ``public_menu.tpl``:"
msgstr ""

#: ../development/plugins.rst:366
msgid ""
"This menu entry will display a link for logged in members (first part) in "
"the \"Public pages\" Galette menu, while second part is used to display top "
"page button on public pages."
msgstr ""

#: ../development/plugins.rst:369
msgid "Add HTML headers"
msgstr ""

#: ../development/plugins.rst:371
msgid ""
"When present, the content of ``header.tpl`` file will add its content in "
"HTML pages headers (the ``<head>`` tag), just after core ones."
msgstr ""

#: ../development/plugins.rst:380
msgid ""
"Headers added this way will be used in the entire application. For CSS "
"stylesheet files, please make sure not to change existing Galette rules, "
"this may cause display issues."
msgstr ""

#: ../development/plugins.rst:382
msgid ""
"Also note the :ref:`path to the CSS file must be obtained using a route "
"<plugins_web_resource>`."
msgstr ""

#: ../development/plugins.rst:385
msgid "Add actions on members"
msgstr ""

#: ../development/plugins.rst:387
msgid ""
"It is possible for a plugin to add actions on members, adding one or more "
"entries in members list \"actions\" column, or displaying one member "
"informations."
msgstr ""

#: ../development/plugins.rst:389
msgid ""
"An ``adh_actions.tpl`` file in your plugin templates will add new actions in"
" members list, with a simple list of links:"
msgstr ""

#: ../development/plugins.rst:400
msgid ""
"Another file named ``adh_fiche_action.tpl`` in your plugin templates will "
"add actions displaying a member for edition, as a HTML list element (``li`` "
"tag):"
msgstr ""

#: ../development/plugins.rst:412
msgid ""
"Each added action must of course add a PHP code that will handle sent data."
msgstr ""

#: ../development/plugins.rst:415
msgid "Add combined actions on members"
msgstr ""

#: ../development/plugins.rst:419
msgid ""
"Some actions are available to be run combined with a members selection from "
"the list, like mailings, CSV exports, labels generations, ... It is also "
"possible to add that kind of action from a plugin. Create a "
"``adh_batch_action.tpl`` file in your plugin templates, it will contain a "
"HTML list element (``li`` tag) with a send button (``<input "
"type=\"submit\"/>``):"
msgstr ""

#: ../development/plugins.rst:431
msgid "Constants declaration"
msgstr ""

#: ../development/plugins.rst:433
msgid ""
"If your plugin must own his own tables in database, it is adivsed to declare"
" an extra prefix so each table can be easily identified in the database. You"
" can declare constants in a ``_config.inc.php`` file to achieve that:"
msgstr ""

#: ../development/plugins.rst:442
msgid "Call to a table in the code will then look like:"
msgstr ""

#: ../development/plugins.rst:456
msgid "Internationalisation"
msgstr ""

#: ../development/plugins.rst:458
msgid ""
"Every plugin must provide translations for new string it proposes. "
":doc:`Galette global internationalisation system <i18n>` applies here. The "
"main task (exepted files update while developing plugin) consists to set up "
"translation files the first time."
msgstr ""

#: ../development/plugins.rst:460
msgid ""
"Use an official plugin up to date as references, and copy ``lang/Makefile`` "
"and ``lang/xgettext.py`` files in your own ``lang`` directory:"
msgstr ""

#: ../development/plugins.rst:467
msgid "You will have to adapt ``Makefile`` file to your plugin:"
msgstr ""

#: ../development/plugins.rst:469
msgid ""
"change ``DOMAINS`` value to reflect translation(s) domain(s) of your plugin;"
msgstr ""

#: ../development/plugins.rst:470
msgid "change ``LANGUAGES`` value to reflect available langs of your plugin;"
msgstr ""

#: ../development/plugins.rst:471
msgid "adapt ``PHP_SOURCES`` value."
msgstr ""

#: ../development/plugins.rst:473
msgid ""
"``PHP_SOURCES`` variables will list all files that mays contains strings to "
"translate. Regarding your needs and your plugins directory hierarchy; they "
"may vary. For example, for a plugin with only a few PHP classes and some "
"Smarty templates, you would use:"
msgstr ""

#: ../development/plugins.rst:481
msgid ""
"If you follow Galette development standards, you should not have to change "
"``PHP_SOURCES``. Advanced editing of the ``Makefile`` is out of the gaols of"
" the documentation."
msgstr ""

#: ../development/plugins.rst:483
msgid ""
"First time you will launch `make`, you may see a lot of errors. You should "
"ignore them, the script is not happy to work with empty `PO` files :) All "
"required directories and files will be created, and you can now use your "
"translation tool to work on them."
msgstr ""

#: ../development/plugins.rst:486
msgid "Update scripts"
msgstr ""

#: ../development/plugins.rst:488
msgid ""
"In a new version, your plugin may need to add/change/drop new "
"tables/columns/else in your tables. To achieve that, you must create a "
"``scripts`` directory. It is handled the exact same ay as "
"``{galette}/install/scripts/``, and must follow the same rules:"
msgstr ""

#: ../development/plugins.rst:490
msgid ""
"installation and update scripts must be provided for both MariaDB (MySQL) "
"and PostgreSQL,"
msgstr ""

#: ../development/plugins.rst:491
msgid ""
"installation script names must be ``mysql.sql`` and ``pgsql.sql`` in order "
"to be found from Galette,"
msgstr ""

#: ../development/plugins.rst:492
msgid ""
"update scripts must also follow a naming convention: ``upgrade-"
"to-{version}-{dbtype}.sql`` or ``upgrade-to-{version}.php``, where "
"`{version}` is the new plugin version and `{dbtype}` the database type "
"(`mysql` or `pgsql`). PHP update scripts does not rely on database engine, "
"if there are specificities, they'll be handled in code itself."
msgstr ""

#: ../development/plugins.rst:494
msgid ""
"Respecting those rules ensures plugin will be supported from the Galette "
"plugins management interface, and user will be able to install or update "
"easily your plugin."
msgstr ""

#: ../development/plugins.rst:497
msgid "PHP classes"
msgstr ""

#: ../development/plugins.rst:499
msgid ""
"Plugins may need their own classes. For Galette, class name and `namespace "
"<https://php.net/manual/fr/language.namespaces.php>`_ (`namespace`) are "
"importants."
msgstr ""

#: ../development/plugins.rst:501
msgid ""
"All classes must be in the ``lib/{namespace}`` directory of your plugin. "
"Each class is a PHP file which name is the class name (including case). "
"Namespace is built with plugin name as declared in ``_define.php``. In our "
"example, plugin name is ``Galette My Plugin`` and therefore the namespace "
"will be ``GaletteMyPlugin``."
msgstr ""

#: ../development/plugins.rst:503
msgid ""
"The `MyClass` class will will be written in "
"``lib/GaletteMyPlugin/MyClass.php``:"
msgstr ""

#: ../development/plugins.rst:514
msgid "And to call it:"
msgstr ""

#: ../development/plugins.rst:527
msgid ""
"When you use namespaces, all other libraries or PHP objects used them "
"aswell. In your ``MyClass``, names of classes will be resolved that way:"
msgstr ""

#: ../development/plugins.rst:542
msgid "Third party libraries"
msgstr ""

#: ../development/plugins.rst:544
msgid ""
"Third party dependencies must not be included in plugin sources, but in "
"releases only."
msgstr ""

#: ../development/plugins.rst:546
msgid ""
"Galette uses :ref:`composer <deps>` to handle third party libraries, plugins"
" can do the same if needed."
msgstr ""

#: ../development/plugins.rst:549
msgid "File system hierarchy"
msgstr ""

#: ../development/plugins.rst:551
msgid "Finally, a plugin directory should look like:"
msgstr ""

#: ../development/plugins.rst:555
msgid "|folder| `galette-myplugin`"
msgstr ""

#: ../development/plugins.rst:557
msgid "|folder| `includes`"
msgstr ""

#: ../development/plugins.rst:559 ../development/plugins.rst:563
#: ../development/plugins.rst:577 ../development/plugins.rst:581
#: ../development/plugins.rst:585 ../development/plugins.rst:591
msgid "|file| `...`"
msgstr ""

#: ../development/plugins.rst:561
msgid "|folder| `lang`"
msgstr ""

#: ../development/plugins.rst:565
msgid "|folder| `lib`"
msgstr ""

#: ../development/plugins.rst:567
msgid "|folder| `GaletteMyPlugin`"
msgstr ""

#: ../development/plugins.rst:569
msgid "|phpfile| `...`"
msgstr ""

#: ../development/plugins.rst:571
msgid "|folder| `templates`"
msgstr ""

#: ../development/plugins.rst:573
msgid "|folder| `default`"
msgstr ""

#: ../development/plugins.rst:575
msgid "|file| `headers.tpl`"
msgstr ""

#: ../development/plugins.rst:576
msgid "|file| `menu.tpl`"
msgstr ""

#: ../development/plugins.rst:579
msgid "|folder| webroot"
msgstr ""

#: ../development/plugins.rst:583
msgid "|folder| `images`"
msgstr ""

#: ../development/plugins.rst:587
msgid "|phpfile| `_config.inc.php`"
msgstr ""

#: ../development/plugins.rst:588
msgid "|phpfile| `_define.php`"
msgstr ""

#: ../development/plugins.rst:589
msgid "|phpfile| `_smarties.php`"
msgstr ""

#: ../development/plugins.rst:590
msgid "|phpfile| `_routes.php`"
msgstr ""

#: ../development/plugins.rst:593
msgid ""
"And for all remaining development questions... Well, rely on `PHP manual "
"<https://php.net/manual/>`_, `Smarty manual "
"<https://www.smarty.net/docs/en/>`_, a mail client to `write to mailing "
"lists "
"<https://galette.eu/dc/index.php/pages/Contact?navlang=en#mailing_lists>`_, "
"and potentially an `IRC client <https://hexchat.github.io/>`_ to join "
"`Galette IRC channel "
"<https://galette.eu/dc/index.php/pages/Contact?navlang=en#irc>`_ ;-)"
msgstr ""

#: ../development/plugins.rst:595
msgid ""
"Just like `Galette core source code <codage>`_, plugins must follow "
":ref:`PSR2 coding standards <conventions>`: https://www.php-"
"fig.org/psr/psr-2/"
msgstr ""

#: ../development/plugins.rst:597
msgid ""
"Since Galette provide support for both MariaDB and PostgreSQL, it would be "
"logicial for plugins to do the same."
msgstr ""

#: ../development/plugins.rst:600
msgid "Registration form"
msgstr ""

#: ../development/plugins.rst:606
msgid ""
"It is possible to reconfigure the registration form. A basic version is "
"provided in Galette, that uses PDF models, but it may not suit everyone "
"needs. The :doc:`fullcard plugin <../plugins/fullcard>` for example, will "
"override to provide its own version, without any change in the browsers URL "
"(completely invisible for users)."
msgstr ""

#: ../development/plugins.rst:608
msgid ""
"This is enabled by creating a ``_preferences.php`` file in your plugin, with"
" a content like:"
msgstr ""
